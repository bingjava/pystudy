
# 24点游戏：
#    四个数字，每个数字有且仅有一次使用机会，必须使用，利用加减乘除的方法，求出结果为24的组合

# 提示词：三轮计算
propose_prompt = """
考虑所有组合(+、-、*、/)计算情况，有小数结果不要输出，重复结果不要输出, 且以纯文本形式输出
输入: 2 8 8 14
可能的下一步行动：
2 + 8 = 10 (left: 8 10 14)
8 / 2 = 4 (left: 4 8 14)
14 + 2 = 16 (left: 8 8 16)
2 * 8 = 16 (left: 8 14 16)
8 - 2 = 6 (left: 6 8 14)
14 - 8 = 6 (left: 2 6 8)
14 /  2 = 7 (left: 7 8 8)
14 - 2 = 12 (left: 8 8 12)
输入: {input}
可能的下一步行动：
"""

propose_prompt2 = """
考虑所有组合(+、-、*、/)计算情况，有小数结果不要输出，重复结果不要输出, 且以纯文本形式输出
输入: 2 4 8
可能的下一步行动：
2 + 8 = 10 (left: 4 10)
8 / 2 = 4 (left: 4 4)
8 - 2 = 6 (left: 4 6)
2 * 8 = 16 (left: 4 16)
2 - 8 = -6 (left: -6 4)
4 - 2 = 2 (left: 2 8)
8 - 4 = 4 (left: 2 4)
输入: 3 5 13
可能的下一步行动：
13 + 5 = 18 (left: 3 18)
13 - 5 = 8 (left: 3 8)
13 * 5 = 65 (left: 3 65)
3 + 5 = 8 (left: 8 13)
5 - 3 = 2 (left: 2 13)
5 * 3 = 15 (left: 13 15)
13 - 3 = 10 (left: 5 10)
13 + 3 = 16 (left: 5 16)
输入: {input}
可能的下一步行动：
"""

propose_prompt3 = """
考虑所有组合(+、-、*、/)计算情况，有小数结果不要输出，重复结果不要输出, 且以纯文本形式输出
输入: 2 8
可能的下一步行动：
2 + 8 = 10 (left: 10)
8 / 2 = 4 (left: 4)
8 * 2 = 16 (left: 16)
8 - 2 = 6 (left: 6)
输入: 4 6
可能的下一步行动：
4 + 6 = 10 (left: 10)
4 - 6 = -2 (left: -2)
4 * 6 = 24 (left: 24)
6 - 4 = 2 (left: 2)
输入: {input}
可能的下一步行动：
"""


# 提示词：前2轮验证
value_prompt1 = """
评估给定的数字是否可以达到24，要求计算所有可能组合，输出sure(20)/likely(1)/impossible(0.001)，要求必须只输出分值
输入:4 4 10
计算所有组合是否可以达到24:
4 + 4 + 10 = 8 + 10 = 18
4 * 10 - 4 = 40 - 4 = 36
(10 - 4) * 4 = 6 * 4 = 24
left: 20
输入:4 9 11
计算所有组合是否可以达到24:
9 + 11 + 4 = 20 + 4 = 24
left: 20
输入:5 7 8
计算所有组合是否可以达到24:
5 + 7 + 8 = 12 + 8 = 20
(8 - 5) * 7 = 3 * 7 = 21
(7 - 5) * 8 = 2 * 8 = 16
(7 - 5) + 8 = 2 + 8 = 10
left: 0.001
输入:5 6 9
计算所有组合是否可以达到24:
5 + 6 + 9 = 20
(6 - 5) * 9 = 1 * 9 = 9
(9 - 6) * 5 = 20
可能达到24
left: 1
输入:{input}
计算所有组合是否可以达到24:
"""

value_prompt2 = """
评估给定的数字是否可以达到24，要求计算所有可能组合，输出sure(20)/likely(1)/impossible(0.001)，要求必须只输出分值
输入:10 14
计算所有组合是否可以达到24:
10 + 14 = 24
left: 20
输入:11 12
计算所有组合是否可以达到24:
11 + 12 = 23
12 - 11 = 1
11 * 12 = 132
left: 0.001
输入:4 6
计算所有组合是否可以达到24:
4 + 6 = 10
4 - 6 = -2
6 - 4 = 2
left: 1
输入:{input}
计算所有组合是否可以达到24:
"""
